Sesi√≥n 3 intro a R
Miguel Castro
2025-10-03
Uso de Claude
Funci√≥n IFELSE
CREACI√ìN DE BASE DE DATOS
Base de datos simulada de nutrici√≥n humana
15 variables con diferentes tipos
set.seed(123) # Para reproducibilidad n <- 200 # 200 participantes
Crear el data frame
datos_nutricion <- data.frame( # 1. ID del participante (num√©rica) id = 1:n,
2. Sexo (categ√≥rica binaria)
sexo = sample(c(‚ÄúMasculino‚Äù, ‚ÄúFemenino‚Äù), n, replace = TRUE),
3. Edad (num√©rica continua)
edad = round(rnorm(n, mean = 35, sd = 12)),
4. Peso en kg (num√©rica continua)
peso_kg = round(rnorm(n, mean = 70, sd = 15), 1),
5. Altura en cm (num√©rica continua)
altura_cm = round(rnorm(n, mean = 168, sd = 10), 1),
6. Nivel de actividad f√≠sica (categ√≥rica ordinal)
actividad_fisica = sample(c(‚ÄúSedentario‚Äù, ‚ÄúLigero‚Äù, ‚ÄúModerado‚Äù, ‚ÄúIntenso‚Äù), n, replace = TRUE, prob = c(0.3, 0.35, 0.25, 0.1)),
7. Consumo de agua diario en litros (num√©rica continua)
agua_litros = round(rnorm(n, mean = 2.0, sd = 0.7), 2),
8. Consumo de frutas y verduras (porciones/d√≠a) (num√©rica discreta)
frutas_verduras_dia = rpois(n, lambda = 3.5),
9. Consumo de prote√≠na diaria en gramos (num√©rica continua)
proteina_g = round(rnorm(n, mean = 80, sd = 25), 1),
10. Tipo de dieta (categ√≥rica nominal)
tipo_dieta = sample(c(‚ÄúOmn√≠vora‚Äù, ‚ÄúVegetariana‚Äù, ‚ÄúVegana‚Äù, ‚ÄúKeto‚Äù, ‚ÄúMediterr√°nea‚Äù), n, replace = TRUE, prob = c(0.5, 0.15, 0.10, 0.10, 0.15)),
11. Consume suplementos (categ√≥rica binaria)
suplementos = sample(c(‚ÄúS√≠‚Äù, ‚ÄúNo‚Äù), n, replace = TRUE, prob = c(0.4, 0.6)),
12. Nivel de colesterol (mg/dL) (num√©rica continua)
colesterol_mg_dl = round(rnorm(n, mean = 195, sd = 35), 1),
13. Glucosa en ayunas (mg/dL) (num√©rica continua)
glucosa_mg_dl = round(rnorm(n, mean = 95, sd = 15), 1),
14. Frecuencia de comidas al d√≠a (num√©rica discreta)
comidas_dia = sample(2:6, n, replace = TRUE, prob = c(0.1, 0.35, 0.35, 0.15, 0.05)),
15. Estado nutricional (categ√≥rica ordinal)
estado_nutricional = sample(c(‚ÄúBajo peso‚Äù, ‚ÄúNormal‚Äù, ‚ÄúSobrepeso‚Äù, ‚ÄúObesidad‚Äù), n, replace = TRUE, prob = c(0.10, 0.45, 0.30, 0.15)) )
Calcular IMC basado en peso y altura
datos_nutricionimc<-round(datos_n utricionpeso_kg / (datos_nutricion$altura_cm/100)^2, 1)
Ajustar algunas inconsistencias para mayor realismo
datos_nutricionedad<-pmax(18,pmin(75,datos_n utricionedad)) datos_nutricionpeso_k g<-pmax(45,pmin(150,datos_n utricionpeso_kg)) datos_nutricionaltura_c m<-pmax(150,pmin(200,datos_n utricionaltura_cm)) datos_nutricionagua_l itros<-pmax(0.5,pmin(5,datos_n utricionagua_litros)) datos_nutricioncolesterol_m g_d l<-pmax(120,pmin(300,datos_n utricioncolesterol_mg_dl)) datos_nutricionglucosa_m g_d l<-pmax(70,pmin(140,datos_n utricionglucosa_mg_dl))
Convertir variables categ√≥ricas a factores
datos_nutricionsexo<-factor(datos_n utricionsexo) datos_nutricionactividad_f isica<-factor(datos_n utricionactividad_fisica, levels = c(‚ÄúSedentario‚Äù, ‚ÄúLigero‚Äù, ‚ÄúModerado‚Äù, ‚ÄúIntenso‚Äù), ordered = TRUE) datos_nutriciontipo_d ieta<-factor(datos_n utriciontipo_dieta) datos_nutricionsuplementos<-factor(datos_n utricionsuplementos) datos_nutricionestado_n utricional<-factor(datos_n utricionestado_nutricional, levels = c(‚ÄúBajo peso‚Äù, ‚ÄúNormal‚Äù, ‚ÄúSobrepeso‚Äù, ‚ÄúObesidad‚Äù), ordered = TRUE)
Mostrar las primeras filas
head(datos_nutricion, 10)
Resumen de la estructura
str(datos_nutricion)
Estad√≠sticas descriptivas
summary(datos_nutricion)
============================================
EJERCICIO: Recodificaci√≥n similar al ejemplo CEP
============================================
Primero, vamos a crear una variable num√©rica de actividad f√≠sica
para poder recodificarla (la original es factor)
Cargar paquetes necesarios
library(dplyr) ###se ha creado actividad_num datos_nutricion <- datos_nutricion %>% dplyr::mutate(actividad_num = case_when(
actividad_fisica == ‚ÄúSedentario‚Äù ~ 1, actividad_fisica == ‚ÄúLigero‚Äù ~ 2, actividad_fisica == ‚ÄúModerado‚Äù ~ 3, actividad_fisica == ‚ÄúIntenso‚Äù ~ 4 ))
Ahora INVERTIMOS la escala (se crea una nueva variable y luego con ifelse aparece la inversi√≥n)
Convertimos: 1->4, 2->3, 3->2, 4->1
datos_nutricion <- datos_nutricion %>% dplyr::mutate(inactividad = ifelse(actividad_num == 1, 4, ifelse(actividad_num == 2, 3, ifelse(actividad_num == 3, 2, ifelse(actividad_num == 4, 1, NA))))) datos_nutricion ‚Äî #3.Estad√≠stica descriptiva ##3.1 Medidas de tendencia central: media, mediana y moda ## Cargar la librer√≠a si no la tienes library(dplyr)
Promedio de peso ignorando NAs
mean(datos_nutricion$peso_kg, na.rm = TRUE)
Promedio de edad
mean(datos_nutricion$edad, na.rm = TRUE)
Promedio de consumo de agua
mean(datos_nutricion$agua_litros, na.rm = TRUE)
###‚ÄúCalcula el promedio de la variable pesokg del data frame datos_, ignorando los valores faltantes (NA)‚Äù
Mediana
median(datos_nutricion$peso_kg, na.rm = TRUE)
Desviaci√≥n est√°ndar
sd(datos_nutricion$peso_kg, na.rm = TRUE)
M√≠nimo y m√°ximo
min(datos_nutricionpeso_k g,na.rm=TRUE)max(datos_n utricionpeso_kg, na.rm = TRUE)
Suma
sum(datos_nutricion$peso_kg, na.rm = TRUE)
============================================================
MEDIDAS DE POSICI√ìN EN R
Cuartiles, Deciles y Percentiles
============================================================
Cuartil 1 (25%)
quantile(datos_nutricion$peso_kg, 0.25, na.rm = TRUE) ###todos‚Äî-> varias opciones
OPCI√ìN 1: Con quantile() - Los 3 cuartiles
quantile(datos_nutricion$peso_kg, probs = c(0.25, 0.50, 0.75), na.rm = TRUE)
OPCI√ìN 2: Incluyendo m√≠nimo (0%) y m√°ximo (100%) - 5 valores
quantile(datos_nutricion$peso_kg, probs = c(0, 0.25, 0.50, 0.75, 1), na.rm = TRUE)
OPCI√ìN 3: Con summary() - La m√°s simple LA MEJOR
summary(datos_nutricion$peso_kg)     ### Te da: Min, Q1, Median, Mean, Q3, Max     quantile(datos_nutricion$peso_kg, 0.75, na.rm = TRUE)
Percentil 90
quantile(datos_nutricion$peso_kg, 0.90, na.rm = TRUE)
Todos los deciles de una vez
quantile(datos_nutricion$peso_kg, seq(0.1, 0.9, 0.1), na.rm = TRUE)
Percentiles 4, 8, 15 y 65
percentiles_especificos <- quantile(datos_nutricion$peso_kg, probs = c(0.04, 0.08, 0.15, 0.65), na.rm = TRUE) print(percentiles_especificos)
COMO se supone que har√© limpieza de datos, no ser√° necesario aplicar NA.RM, VEAMOS UN EJEMPLO percentiles_especificos <- quantile(datos_nutricion$peso_kg, probs = c(0.04, 0.08, 0.15, 0.65)) print(percentiles_especificos)
##EJERCICIOS Actividades Promedio y mediana
Calcula el promedio y la mediana de la variable edad.
Interpreta si la distribuci√≥n parece estar sesgada (compara media vs. mediana).
Dispersi√≥n
Calcula la desviaci√≥n est√°ndar de peso_kg.
Explica qu√© significa este valor en t√©rminos pr√°cticos para la variabilidad del peso de los participantes.
Medidas de posici√≥n
Obt√©n los cuartiles (Q1, Q2, Q3) del peso_kg usando la funci√≥n quantile().
Explica qu√© representa cada uno en relaci√≥n con los participantes.
Percentiles espec√≠ficos
Calcula el percentil 90 del peso_kg.
Interpreta: ¬øqu√© significa que un participante est√© por debajo del P90?
Deciles
Obt√©n todos los deciles de peso_kg y determina el valor l√≠mite del D5.
Explica c√≥mo se relaciona con la mediana.
Aplicaci√≥n pr√°ctica
Supongamos que un deportista tiene un peso de 78 kg.
Ub√≠calo en qu√© cuartil y en qu√© decil se encuentra.
¬øDir√≠as que su peso est√° dentro de los valores m√°s bajos, medios o altos de la muestra?
mean(datos_nutricionedad)median(datos_n utricionedad) sd(datos_nutricionpeso_k g)quantile(datos_n utricionpeso_kg, probs = c(0.25, 0.50, 0.75)) quantile(datos_nutricionpeso_k g,0.90)quantile(datos_n utricionpeso_kg, seq(0.1, 0.9, 0.1))
se encuentra en el valor medio alto
================================================= 
üìå Resumen de funciones de Estad√≠stica Descriptiva en R 1. Medidas de tendencia central mean(x, na.rm = TRUE) ‚Üí Calcula la media.
median(x, na.rm = TRUE) ‚Üí Calcula la mediana.
(La moda no tiene funci√≥n directa en R base, se suele programar con table() o usar paquetes).
	Medidas de dispersi√≥n sd(x, na.rm = TRUE) ‚Üí Desviaci√≥n est√°ndar.
min(x, na.rm = TRUE) ‚Üí Valor m√≠nimo.
max(x, na.rm = TRUE) ‚Üí Valor m√°ximo.
sum(x, na.rm = TRUE) ‚Üí Suma total.
range(x, na.rm = TRUE) ‚Üí Devuelve m√≠nimo y m√°ximo juntos.
	Medidas de posici√≥n quantile(x, 0.25, na.rm = TRUE) ‚Üí Calcula un cuartil espec√≠fico (en este caso Q1 = 25%).
quantile(x, probs = c(0.25, 0.50, 0.75), na.rm = TRUE) ‚Üí Los tres cuartiles de una vez.
quantile(x, probs = c(0, 0.25, 0.50, 0.75, 1), na.rm = TRUE) ‚Üí Incluye m√≠nimo y m√°ximo junto con los cuartiles.
summary(x) ‚Üí Resumen estad√≠stico (Min, Q1, Mediana, Media, Q3, Max).
quantile(x, 0.90, na.rm = TRUE) ‚Üí Percentil 90.
quantile(x, seq(0.1, 0.9, 0.1), na.rm = TRUE) ‚Üí Todos los deciles (D1 a D9).
quantile(x, probs = c(0.04, 0.08, 0.15, 0.65), na.rm = TRUE) ‚Üí Percentiles espec√≠ficos.
	Manejo de valores faltantes El argumento na.rm = TRUE ‚Üí elimina los NA antes de calcular.
Si ya limpiaste los datos y no hay NA, no es necesario incluirlo.
